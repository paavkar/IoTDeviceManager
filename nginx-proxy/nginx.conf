server {
    listen 80;
    server_name _;  # This will match any server name

    return 301 https://$host$request_uri;
}

server {
    listen 8080;
    server_name _;  # This will match any server name

    location / {
        proxy_pass http://webapi/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

server {
    listen 443 ssl;
    server_name _;

    # SSL certificate settings
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;  # Enforce secure protocols
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Route /react to the React frontend container
    location /react/ {
        proxy_pass http://react_frontend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Route /angular to the Angular frontend container
    location /angular/ {
        proxy_pass http://angular_frontend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    # Route /api to the .NET Web API container
    location /api/ {
        proxy_pass http://webapi/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Optionally, proxy any other unmatched requests to one of your frontends,
    # or serve a default page.
    location / {
        proxy_pass http://react_frontend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
