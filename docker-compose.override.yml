services:
  webapi:
    image: ${DOCKER_REGISTRY-}iotdevicemanagerserver
    build:
        context: .
        dockerfile: IoTDeviceManager.server/Dockerfile
    command: sh -c "dotnet ef database update && dotnet IoTDeviceManager.server.dll"
    environment:
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_DEV}
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_HTTPS_PORTS=443
    ports:
      - "5089:80"
      - "7221:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  react_frontend:
      image: ${DOCKER_REGISTRY-}iotdevicemanagerclient
      build:
          context: ./IoTDeviceManager.client
          dockerfile: Dockerfile

  angular_frontend:
      image: ${DOCKER_REGISTRY-}iotdevicemanagerangularclient
      build:
          context: ./IoTDeviceManager.angularClient
          dockerfile: Dockerfile

networks:
  app_network:
    driver: bridge

volumes:
  db_data: