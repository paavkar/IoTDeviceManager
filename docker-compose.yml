version: '3.8'

services:
    db:
        image: "mcr.microsoft.com/mssql/server:2022-latest"
        environment:
            SA_PASSWORD: ${DatabasePassword}
            ACCEPT_EULA: "Y"
        ports:
            - "1433:1433"
        volumes:
            - db_data:/var/opt/mssql
        networks:
            - app_network
    cosmosdb:
        image: "mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest"
        container_name: cosmosdb-idm
        ports:
            - "8081:8081"
            - "8082:8082"
        volumes:
            - cosmosdb_data:/data/cosmosdb
        networks:
            - app_network
        tty: true
        restart: always
        environment:
            - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=10
            - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true

    webapi:
        depends_on:
            - db
            - cosmosdb
        networks:
            - app_network
        environment:
            - AZURE_IOT_HUB_CONNECTION_STRING=${AZURE_IOT_HUB_CONNECTION_STRING}
            - AZURE_IOT_SERVICE_CONNECTION_STRING=${AZURE_IOT_SERVICE_CONNECTION_STRING}
            - COSMOS_DB_CONNECTION_STRING=${COSMOS_DB_CONNECTION_STRING}
  
    react_frontend:
        depends_on:
            - webapi
        ports:
            - "53122:80"
        networks:
            - app_network

    angular_frontend:
        depends_on:
            - webapi
        ports:
            - "63217:80"
        networks:
            - app_network

    nginx_proxy:
        build:
            context: ./nginx-proxy
            dockerfile: Dockerfile
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        networks:
            - app_network
        depends_on:
            - react_frontend
            - angular_frontend

networks:
  app_network:
    driver: bridge

volumes:
  db_data:
  cosmosdb_data:
